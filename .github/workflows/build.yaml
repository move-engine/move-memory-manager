# Used the following yaml as reference
# https://github.com/xiaozhuai/test_github_actions/blob/1487cc732bf08a4e5a31b3551a3db7542730f8ae/.github/workflows/build-every-commit.yml
name: Build and Test
on:
  push:
    branches: [main]

jobs:
  tests:
    strategy:
      matrix:
        os: [
          ubuntu-latest, 
          # macos-latest, 
          windows-2022,
        ]
        compiler:
          - llvm-13.0.0
          - gcc
          # you can specify the version after `-` like `llvm-13.0.0`.
        include:
          - os: "windows-2022"
            compiler: "msvc"
        # exclude:
        #   - os: "windows-2022"
        #     compiler: llvm-13.0.0
        #   - os: "windows-2022"
        #     compiler: gcc
    runs-on: ${{ matrix.os }}
    env:
      CPM_SOURCE_CACHE: ~/.cpm/
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive
      
      - name: Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cpm/

          key: ${{ runner.os }}-${{ matrix.compiler }}-${{ env.BUILD_TYPE }}-${{ hashFiles('**/CMakeLists.txt') }}-${{ hashFiles('./vcpkg.json')}}
      
      - name: Setup Cpp
        uses: aminya/setup-cpp@v1
        with:
          compiler: ${{ matrix.compiler }}
          vcvarsall: ${{ contains(matrix.os, 'windows') }}
          cmake: true
          ninja: true
          cppcheck: true
          clangtidy: true

      - name: Configure build environment
        run: |
          mkdir build
          cd build
          cmake ../ -DCMAKE_BUILD_TYPE=Debug -DMOVE_MEMORY_MANAGER_WITH_TESTS=on -DMOVE_MEMORY_MANAGER_CI=on
      
      - name: Build Tests
        run: |
          cd build
          cmake --build . --target move-mm-tests -j16
      
      - name: Run Tests (*nix)
        if: ${{ !contains(matrix.os, 'windows') }}
        run: ./build/tests/move-mm-tests -r xml > tests/move-mm-tests.xml
      
      - name: Run Tests (Windows)
        if: ${{ contains(matrix.os, 'windows') }}
        run: ./build/tests/Debug/move-mm-tests.exe -r xml > tests/move-mm-tests.xml
      
      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action/composite@v2.2.0
        with:
          files: tests/**/*.xml

      - uses: actions/upload-artifact@v2
        if: ${{ contains(matrix.os, 'ubuntu') && contains(matrix.compiler, 'gcc') }}
        with:
          name: package-version
          path: package_version.txt
      
  tag-version:
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: package-version
      
      - name: Set Tag Output
        id: set-tag
        run:  echo "::set-output name=tag_name::$(cat package_version.txt)"

      - name: Create Tag
        uses: actions/github-script@v3
        env:
            TAG: ${{ steps.set-tag.outputs.tag_name }}
        with:
            github-token: ${{ github.token }}
            script: |
              github.git.createRef({
                owner: context.repo.owner,
                repo: context.repo.repo,
              ref: "refs/tags/${{ steps.set-tag.outputs.tag_name }}",
                sha: context.sha
              })